config:
subcomponents:
  strimzi-kafka-operator:
    namespace: "kafka"
    injectNamespace: true
  prometheus-grafana:
    subcomponents:
      prometheus:
        config:
          serverFiles:
            prometheus.yml:
              rule_files:
                - /etc/config/rules
                - /etc/config/alerts
              scrape_configs:
                - job_name: prometheus
                  static_configs:
                    - targets:
                      - localhost:9090

                - job_name: 'kubernetes-apiservers'
                  kubernetes_sd_configs:
                    - role: endpoints
                  scheme: https
                  tls_config:
                    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
                    insecure_skip_verify: true
                  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
                  relabel_configs:
                    - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
                      action: keep
                      regex: default;kubernetes;https

                - job_name: 'kubernetes-nodes'
                  scheme: https
                  tls_config:
                    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
                    insecure_skip_verify: true
                  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
                  kubernetes_sd_configs:
                    - role: node
                  relabel_configs:
                    - action: labelmap
                      regex: __meta_kubernetes_node_label_(.+)
                    - target_label: __address__
                      replacement: kubernetes.default.svc:443
                    - source_labels: [__meta_kubernetes_node_name]
                      regex: (.+)
                      target_label: __metrics_path__
                      replacement: /api/v1/nodes/$1/proxy/metrics

                - job_name: 'kubernetes-nodes-cadvisor'
                  honor_labels: true
                  scrape_interval: 10s
                  scrape_timeout: 10s
                  metrics_path: /metrics
                  scheme: https
                  kubernetes_sd_configs:
                  - role: node
                    namespaces:
                      names: []
                  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
                  tls_config:
                    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
                    insecure_skip_verify: true
                  relabel_configs:
                  - separator: ;
                    regex: __meta_kubernetes_node_label_(.+)
                    replacement: $1
                    action: labelmap
                  - separator: ;
                    regex: (.*)
                    target_label: __address__
                    replacement: kubernetes.default.svc:443
                    action: replace
                  - source_labels: [__meta_kubernetes_node_name]
                    separator: ;
                    regex: (.+)
                    target_label: __metrics_path__
                    replacement: /api/v1/nodes/${1}/proxy/metrics/cadvisor
                    action: replace
                  - source_labels: [__meta_kubernetes_node_name]
                    separator: ;
                    regex: (.*)
                    target_label: node_name
                    replacement: $1
                    action: replace
                  - source_labels: [__meta_kubernetes_node_address_InternalIP]
                    separator: ;
                    regex: (.*)
                    target_label: node_ip
                    replacement: $1
                    action: replace
                  metric_relabel_configs:
                  - source_labels: [pod_name]
                    separator: ;
                    regex: (.*)
                    target_label: kubernetes_pod_name
                    replacement: $1
                    action: replace
                  - separator: ;
                    regex: pod_name
                    replacement: $1
                    action: labeldrop
                  - source_labels: [container_name, __name__]
                    separator: ;
                    regex: POD;container_(network).*
                    target_label: container_name
                    replacement: $1
                    action: replace
                  - source_labels: [container_name]
                    separator: ;
                    regex: POD
                    replacement: $1
                    action: drop
                  - source_labels: [container_name]
                    separator: ;
                    regex: ^$
                    replacement: $1
                    action: drop
                  - source_labels: [__name__]
                    separator: ;
                    regex: container_(network_tcp_usage_total|tasks_state|cpu_usage_seconds_total|memory_failures_total|network_udp_usage_total)
                    replacement: $1
                    action: drop

                - job_name: 'kubernetes-service-endpoints'
                  kubernetes_sd_configs:
                    - role: endpoints
                  relabel_configs:
                    - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape]
                      action: keep
                      regex: true
                    - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]
                      action: replace
                      target_label: __scheme__
                      regex: (https?)
                    - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
                      action: replace
                      target_label: __metrics_path__
                      regex: (.+)
                    - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
                      action: replace
                      target_label: __address__
                      regex: ([^:]+)(?::\d+)?;(\d+)
                      replacement: $1:$2
                    - action: labelmap
                      regex: __meta_kubernetes_service_label_(.+)
                    - source_labels: [__meta_kubernetes_namespace]
                      action: replace
                      target_label: kubernetes_namespace
                    - source_labels: [__meta_kubernetes_service_name]
                      action: replace
                      target_label: kubernetes_name
                    - source_labels: [__meta_kubernetes_pod_node_name]
                      action: replace
                      target_label: kubernetes_node

                - job_name: 'prometheus-pushgateway'
                  honor_labels: true
                  kubernetes_sd_configs:
                    - role: service
                  relabel_configs:
                    - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_probe]
                      action: keep
                      regex: pushgateway

                - job_name: 'kubernetes-services'
                  honor_labels: true
                  scrape_interval: 10s
                  scrape_timeout: 10s
                  metrics_path: /metrics
                  scheme: http
                  kubernetes_sd_configs:
                  - api_server: null
                    role: endpoints
                    namespaces:
                      names: []
                  relabel_configs:
                  - source_labels: [__meta_kubernetes_endpoints_name]
                    separator: ;
                    regex: prometheus-node-exporter
                    replacement: $1
                    action: drop
                  - source_labels: [__meta_kubernetes_endpoints_name]
                    separator: ;
                    regex: prometheus-kube-state-metrics
                    replacement: $1
                    action: drop
                  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape]
                    separator: ;
                    regex: "true"
                    replacement: $1
                    action: keep
                  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]
                    separator: ;
                    regex: (https?)
                    target_label: __scheme__
                    replacement: $1
                    action: replace
                  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
                    separator: ;
                    regex: (.+)
                    target_label: __metrics_path__
                    replacement: $1
                    action: replace
                  - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
                    separator: ;
                    regex: (.+)(?::\d+);(\d+)
                    target_label: __address__
                    replacement: $1:$2
                    action: replace
                  - separator: ;
                    regex: __meta_kubernetes_service_label_(.+)
                    replacement: $1
                    action: labelmap
                  - source_labels: [__meta_kubernetes_namespace]
                    separator: ;
                    regex: (.*)
                    target_label: namespace
                    replacement: $1
                    action: replace
                  - source_labels: [__meta_kubernetes_namespace]
                    separator: ;
                    regex: (.*)
                    target_label: kubernetes_namespace
                    replacement: $1
                    action: replace
                  - source_labels: [__meta_kubernetes_service_name]
                    separator: ;
                    regex: (.*)
                    target_label: kubernetes_name
                    replacement: $1
                    action: replace
                  - source_labels: [__meta_kubernetes_pod_node_name]
                    separator: ;
                    regex: (.*)
                    target_label: node_name
                    replacement: $1
                    action: replace
                  - source_labels: [__meta_kubernetes_pod_host_ip]
                    separator: ;
                    regex: (.*)
                    target_label: node_ip
                    replacement: $1
                    action: replace
                  - separator: ;
                    regex: __meta_kubernetes_pod_label_(.+)
                    replacement: $1
                    action: labelmap
                  - source_labels: [__meta_kubernetes_pod_name]
                    separator: ;
                    regex: (.*)
                    target_label: kubernetes_pod_name
                    replacement: $1
                    action: replace

                - job_name: 'kubernetes-pods'
                  honor_labels: true
                  scrape_interval: 10s
                  scrape_timeout: 10s
                  metrics_path: /metrics
                  scheme: http
                  kubernetes_sd_configs:
                  - role: pod
                    namespaces:
                      names: []
                  relabel_configs:
                  - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
                    separator: ;
                    regex: "true"
                    replacement: $1
                    action: keep
                  - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
                    separator: ;
                    regex: (.+)
                    target_label: __metrics_path__
                    replacement: $1
                    action: replace
                  - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_port, __meta_kubernetes_pod_container_port_name]
                    separator: ;
                    regex: ^(.+;.*)|(;.*metrics)$
                    replacement: $1
                    action: keep
                  - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
                    separator: ;
                    regex: (.+):(?:\d+);(\d+)
                    target_label: __address__
                    replacement: ${1}:${2}
                    action: replace
                  - separator: ;
                    regex: __meta_kubernetes_pod_label_(.+)
                    replacement: $1
                    action: labelmap
                  - source_labels: [__meta_kubernetes_namespace]
                    separator: ;
                    regex: (.*)
                    target_label: namespace
                    replacement: $1
                    action: replace
                  - source_labels: [__meta_kubernetes_pod_name]
                    separator: ;
                    regex: (.*)
                    target_label: kubernetes_pod_name
                    replacement: $1
                    action: replace
                  - source_labels: [__meta_kubernetes_pod_node_name]
                    separator: ;
                    regex: (.*)
                    target_label: node_name
                    replacement: $1
                    action: replace
                  - source_labels: [__meta_kubernetes_pod_host_ip]
                    separator: ;
                    regex: (.*)
                    target_label: node_ip
                    replacement: $1
                    action: replace

  confluent-schema-registry:
    namespace: "kafka"
    injectNamespace: true
    config:
      replicaCount: 3
      service:
        labels: {}

      kafkaStore:
        overrideBootstrapServers: "PLAINTEXT://kafka-cluster-kafka-brokers.kafka:9092"

      kafka:
        enabled: false

      ingress:
        enabled: false

      external:
        enabled: false

      jmx:
        enabled: false
        port: 5555

      prometheus:
        jmx:
          enabled: false
          image: solsson/kafka-prometheus-jmx-exporter@sha256
          imageTag: 6f82e2b0464f50da8104acd7363fb9b995001ddff77d248379f8788e78946143
          port: 5556
          resources:
            limits:
              cpu: 100m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 128Mi

      secrets: []
